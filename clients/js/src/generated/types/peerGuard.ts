/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';

/**
 * Gaurd to validate transactions using PeerPay
 *
 * List of accounts required:
 *
 * 0. `[writable]` Transaction ID PDA. The PDA is derived
 * using the seed `[transaction_id,candy guard pubkey,
 * candy machine pubkey]`.
 */

export type PeerGuard = { authority: PublicKey };

export type PeerGuardArgs = PeerGuard;

export function getPeerGuardSerializer(): Serializer<PeerGuardArgs, PeerGuard> {
  return struct<PeerGuard>([['authority', publicKeySerializer()]], {
    description: 'PeerGuard',
  }) as Serializer<PeerGuardArgs, PeerGuard>;
}
